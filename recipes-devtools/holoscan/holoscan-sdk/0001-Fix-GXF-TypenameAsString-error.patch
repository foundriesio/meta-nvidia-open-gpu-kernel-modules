From fae6433ec8c72c736a18a539ecd6af1b1d9567a5 Mon Sep 17 00:00:00 2001
From: Ian Stewart <istewart@nvidia.com>
Date: Mon, 19 Dec 2022 18:44:32 -0700
Subject: Fix GXF TypenameAsString error

---
 include/holoscan/core/gxf/entity.hpp    | 6 +++---
 include/holoscan/core/gxf/gxf_utils.hpp | 2 +-
 src/core/gxf/entity.cpp                 | 2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/include/holoscan/core/gxf/entity.hpp b/include/holoscan/core/gxf/entity.hpp
index 80229ac..042bf23 100644
--- a/include/holoscan/core/gxf/entity.hpp
+++ b/include/holoscan/core/gxf/entity.hpp
@@ -74,7 +74,7 @@ class Entity : public nvidia::gxf::Entity {
     // We first try to get holoscan::gxf::GXFTensor from GXF Entity.
     gxf_tid_t tid;
     auto tid_result =
-        GxfComponentTypeId(context(), nvidia::TypenameAsString<holoscan::gxf::GXFTensor>(), &tid);
+        GxfComponentTypeId(context(), TypenameAsString<holoscan::gxf::GXFTensor>(), &tid);
     if (tid_result != GXF_SUCCESS) {
       if (log_errors) {
         HOLOSCAN_LOG_ERROR("Unable to get component type id: {}", tid_result);
@@ -87,7 +87,7 @@ class Entity : public nvidia::gxf::Entity {
     if (cid_result != GXF_SUCCESS) {
       // Then, we try to get nvidia::gxf::Tensor from GXF Entity.
       tid_result =
-          GxfComponentTypeId(context(), nvidia::TypenameAsString<nvidia::gxf::Tensor>(), &tid);
+          GxfComponentTypeId(context(), TypenameAsString<nvidia::gxf::Tensor>(), &tid);
       if (tid_result != GXF_SUCCESS) {
         if (log_errors) {
           HOLOSCAN_LOG_ERROR(
@@ -132,7 +132,7 @@ class Entity : public nvidia::gxf::Entity {
   void add(std::shared_ptr<DataT>& data, const char* name = nullptr) {
     gxf_tid_t tid;
     const auto tid_result =
-        GxfComponentTypeId(context(), nvidia::TypenameAsString<holoscan::gxf::GXFTensor>(), &tid);
+        GxfComponentTypeId(context(), TypenameAsString<holoscan::gxf::GXFTensor>(), &tid);
     if (tid_result != GXF_SUCCESS) {
       throw std::runtime_error(fmt::format(
           "Unable to get component type id from 'holoscan::gxf::GXFTensor' (error code: {})",
diff --git a/include/holoscan/core/gxf/gxf_utils.hpp b/include/holoscan/core/gxf/gxf_utils.hpp
index c72c61a..769ab3b 100644
--- a/include/holoscan/core/gxf/gxf_utils.hpp
+++ b/include/holoscan/core/gxf/gxf_utils.hpp
@@ -189,7 +189,7 @@ inline gxf_uid_t find_component_handle(gxf_context_t context, gxf_uid_t componen
 
   // Get the type id of the component we are are looking for.
   gxf_tid_t tid;
-  const gxf_result_t result_2 = GxfComponentTypeId(context, ::nvidia::TypenameAsString<S>(), &tid);
+  const gxf_result_t result_2 = GxfComponentTypeId(context, TypenameAsString<S>(), &tid);
   if (result_2 != GXF_SUCCESS) { return 0; }
 
   // Find the component in the indicated entity
diff --git a/src/core/gxf/entity.cpp b/src/core/gxf/entity.cpp
index 6ef27ed..7b3cb5c 100644
--- a/src/core/gxf/entity.cpp
+++ b/src/core/gxf/entity.cpp
@@ -48,7 +48,7 @@ nvidia::gxf::Handle<nvidia::gxf::VideoBuffer> get_videobuffer(Entity entity, con
   // We first try to get holoscan::gxf::GXFTensor from GXF Entity.
   gxf_tid_t tid;
   auto tid_result = GxfComponentTypeId(
-      entity.context(), nvidia::TypenameAsString<nvidia::gxf::VideoBuffer>(), &tid);
+      entity.context(), TypenameAsString<nvidia::gxf::VideoBuffer>(), &tid);
   if (tid_result != GXF_SUCCESS) {
     throw std::runtime_error(fmt::format("Unable to get component type id: {}", tid_result));
   }
-- 
2.34.1

