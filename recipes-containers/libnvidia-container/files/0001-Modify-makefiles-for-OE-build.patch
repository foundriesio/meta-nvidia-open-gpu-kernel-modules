From 28ecf70cf78c7006ffe869d30a0692b35b2f579c Mon Sep 17 00:00:00 2001
From: Ian Stewart <istewart@nvidia.com>
Date: Thu, 26 Jan 2023 14:07:53 -0700
Subject: Modify makefiles for OE build

---
 Makefile     | 29 +++++++----------------------
 mk/common.mk |  2 +-
 2 files changed, 8 insertions(+), 23 deletions(-)

diff --git a/Makefile b/Makefile
index 6fb6976..cc94a3d 100644
--- a/Makefile
+++ b/Makefile
@@ -17,9 +17,9 @@
 
 ##### Global variables #####
 
-WITH_NVCGO   ?= yes
-WITH_LIBELF  ?= no
-WITH_TIRPC   ?= no
+WITH_NVCGO   ?= no
+WITH_LIBELF  ?= yes
+WITH_TIRPC   ?= yes
 WITH_SECCOMP ?= yes
 
 ##### Global definitions #####
@@ -165,9 +165,8 @@ else
 LIB_LDLIBS_STATIC  += -l:libelf.a
 endif
 ifeq ($(WITH_TIRPC), yes)
-LIB_CPPFLAGS       += -isystem $(DEPS_DIR)$(includedir)/tirpc -DWITH_TIRPC
-LIB_LDLIBS_STATIC  += -l:libtirpc.a
-LIB_LDLIBS_SHARED  += -lpthread
+LIB_CPPFLAGS       += -DWITH_TIRPC
+LIB_LDLIBS_SHARED  += -lpthread -ltirpc
 endif
 ifeq ($(WITH_SECCOMP), yes)
 LIB_CPPFLAGS       += -DWITH_SECCOMP $(shell pkg-config --cflags libseccomp)
@@ -227,7 +226,6 @@ $(LIB_SHARED): $(LIB_OBJS)
 	$(OBJCPY) --only-keep-debug $@ $(LIB_SONAME)
 	$(OBJCPY) --add-gnu-debuglink=$(LIB_SONAME) $@
 	$(MV) $(LIB_SONAME) $(DEBUG_DIR)
-	$(STRIP) --strip-unneeded -R .comment $@
 
 $(LIB_STATIC_OBJ): $(LIB_OBJS)
 	# FIXME Handle user-defined LDFLAGS and LDLIBS
@@ -237,12 +235,11 @@ $(LIB_STATIC_OBJ): $(LIB_OBJS)
 
 $(BIN_NAME): $(BIN_OBJS)
 	$(CC) $(BIN_CFLAGS) $(BIN_CPPFLAGS) $(BIN_LDFLAGS) $(OUTPUT_OPTION) $^ $(BIN_SCRIPT) $(BIN_LDLIBS)
-	$(STRIP) --strip-unneeded -R .comment $@
 
 ##### Public rules #####
 
 all: CPPFLAGS += -DNDEBUG
-all: shared static tools
+all: shared tools
 
 # Run with ASAN_OPTIONS="protect_shadow_gap=0" to avoid CUDA OOM errors
 debug: CFLAGS += -pedantic -fsanitize=undefined -fno-omit-frame-pointer -fno-common -fsanitize=address
@@ -258,32 +255,24 @@ static: $(LIB_STATIC)($(LIB_STATIC_OBJ))
 
 deps: $(LIB_RPC_SRCS) $(BUILD_DEFS)
 	$(MKDIR) -p $(DEPS_DIR)
-	$(MAKE) -f $(MAKE_DIR)/nvidia-modprobe.mk DESTDIR=$(DEPS_DIR) install
 ifeq ($(WITH_NVCGO), yes)
 	$(MAKE) -f $(MAKE_DIR)/nvcgo.mk DESTDIR=$(DEPS_DIR) MAJOR=$(MAJOR) VERSION=$(VERSION) LIB_NAME=$(LIBGO_NAME) install
 endif
 ifeq ($(WITH_LIBELF), no)
 	$(MAKE) -f $(MAKE_DIR)/elftoolchain.mk DESTDIR=$(DEPS_DIR) install
 endif
-ifeq ($(WITH_TIRPC), yes)
-	$(MAKE) -f $(MAKE_DIR)/libtirpc.mk DESTDIR=$(DEPS_DIR) install
-endif
 
-install: all
+install: shared tools
 	$(INSTALL) -d -m 755 $(addprefix $(DESTDIR),$(includedir) $(bindir) $(libdir) $(docdir) $(libdbgdir) $(pkgconfdir))
 	# Install header files
 	$(INSTALL) -m 644 $(LIB_INCS) $(DESTDIR)$(includedir)
 	# Install library files
-	$(INSTALL) -m 644 $(LIB_STATIC) $(DESTDIR)$(libdir)
 	$(INSTALL) -m 755 $(LIB_SHARED) $(DESTDIR)$(libdir)
 	$(LN) -sf $(LIB_SONAME) $(DESTDIR)$(libdir)/$(LIB_SYMLINK)
 ifeq ($(WITH_NVCGO), yes)
 	$(INSTALL) -m 755 $(DEPS_DIR)$(libdir)/$(LIBGO_SHARED) $(DESTDIR)$(libdir)
 	$(LN) -sf $(LIBGO_SONAME) $(DESTDIR)$(libdir)/$(LIBGO_SYMLINK)
 endif
-	$(LDCONFIG) -n $(DESTDIR)$(libdir)
-	# Install debugging symbols
-	$(INSTALL) -m 644 $(DEBUG_DIR)/$(LIB_SONAME) $(DESTDIR)$(libdbgdir)
 	# Install configuration files
 	$(MAKE_DIR)/$(LIB_PKGCFG).in "$(strip $(VERSION))" "$(strip $(LIB_LDLIBS_SHARED))" > $(DESTDIR)$(pkgconfdir)/$(LIB_PKGCFG)
 	# Install binary files
@@ -316,16 +305,12 @@ dist: install
 
 depsclean:
 	$(RM) $(BUILD_DEFS)
-	-$(MAKE) -f $(MAKE_DIR)/nvidia-modprobe.mk clean
 ifeq ($(WITH_NVCGO), yes)
 	-$(MAKE) -f $(MAKE_DIR)/nvcgo.mk clean
 endif
 ifeq ($(WITH_LIBELF), no)
 	-$(MAKE) -f $(MAKE_DIR)/elftoolchain.mk clean
 endif
-ifeq ($(WITH_TIRPC), yes)
-	-$(MAKE) -f $(MAKE_DIR)/libtirpc.mk clean
-endif
 
 mostlyclean:
 	$(RM) $(LIB_OBJS) $(LIB_STATIC_OBJ) $(BIN_OBJS) $(DEPENDENCIES)
diff --git a/mk/common.mk b/mk/common.mk
index f6d5fbf..b894188 100644
--- a/mk/common.mk
+++ b/mk/common.mk
@@ -14,7 +14,7 @@ MKDIR    ?= mkdir
 LDCONFIG ?= ldconfig
 INSTALL  ?= install
 STRIP    ?= strip
-OBJCPY   ?= objcopy
+OBJCPY   ?= $(OBJCOPY)
 RPCGEN   ?= rpcgen
 BMAKE    ?= MAKEFLAGS= bmake
 DOCKER   ?= docker
-- 
2.34.1

